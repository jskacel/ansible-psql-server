- name: Install PostgreSQL server
  hosts: all
  gather_facts: false
  become: true
  collections:
    - community.postgresql
    - ansible.posix

  vars:
    psql_version: "15" # or 13
    psql_databases:
     - username: "someuser"
       password: "secretpassword"
       database: "somedatabase"
       sourceip: "0.0.0.0/0" # this should be changed to IP or range from where you want to connect
       extension: "" # in case of Hub, you need to add hstore
    #  - username: "anotheruser"
    #    password: "secretpassword"
    #    database: "anotherdatabase"
    #    sourceip: "0.0.0.0/0" # this should be changed to IP or range from where you want to connect
    #    extension: "" # in case of Hub, you need to add hstore

  handlers:
    - name: Restart PostgreSQL
      ansible.builtin.systemd:
        name: postgresql.service
        state: restarted
        enabled: true
  
  tasks:
  - name: Install PostgreSQL via module
    ansible.builtin.command:
      cmd: dnf module install -y postgresql:{{ psql_version }}/server
    register: psql_module
    failed_when: psql_module.rc != 0
    notify:
      - Restart PostgreSQL

  - name: Install postgresql-contrib
    ansible.builtin.package:
      name: postgresql-contrib
      state: present

  - name: Database init
    ansible.builtin.command:
      cmd: postgresql-setup --initdb
      creates: /var/lib/pgsql/data/postgresql.conf
    register: init_db
    failed_when: init_db.rc != 0
  
  - name: Install python3-psycopg2
    ansible.builtin.package:
      name: python3-psycopg2
      state: present

  - name: Change encryption in configuration
    ansible.builtin.lineinfile:
      path: /var/lib/pgsql/data/postgresql.conf
      regexp: '^#password_encryption'
      line: password_encryption = scram-sha-256
    notify:
      - Restart PostgreSQL
  
  - name: Change listen address
    ansible.builtin.lineinfile:
      path: /var/lib/pgsql/data/postgresql.conf
      regexp: '^#listen_addresses'
      line: "listen_addresses = '*'"
    notify:
      - Restart PostgreSQL

  - name: Allow connection in ph_hba
    community.postgresql.postgresql_pg_hba:
      dest: /var/lib/pgsql/data/pg_hba.conf
      contype: host
      users: "{{ item.username }}"
      source: "{{ item.sourceip }}"
      databases: "{{ item.database }}" 
      method: scram-sha-256
      create: true
    loop: "{{ psql_databases }}"
    notify:
      - Restart PostgreSQL

  - ansible.builtin.meta: flush_handlers
  
  - name: Allow firewall for 5432/tcp
    ansible.posix.firewalld:
      port: 5432/tcp
      permanent: true
      state: enabled
      immediate: true
  
  - name: Create a PostgreSQL user
    become: true
    become_user: postgres
    community.postgresql.postgresql_user:
      name: "{{ item.username }}"
      password: "{{ item.password }}"
      role_attr_flags: CREATEDB,CREATEROLE
    environment:
      PGOPTIONS: "-c password_encryption=scram-sha-256"
    loop: "{{ psql_databases }}"

  - name: Create a new database
    become: true
    become_user: postgres
    community.postgresql.postgresql_db:
      name: "{{ item.database }}"
      owner: "{{ item.username }}"
    loop: "{{ psql_databases }}"

  - name: Enable extensions for database
    become: true
    become_user: postgres
    when: item.extension != ""
    community.postgresql.postgresql_ext:
      name: "{{ item.extension }}"
      db: "{{ item.database }}"
      state: present

    loop: "{{ psql_databases }}"
